/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * freee人事労務 API
 * 
<p>freee人事労務のAPI仕様です。</p>

<hr />

<h2 id="start_guide">スタートガイド</h2>

<p>freee API開発がはじめての方は<a href="https://developer.freee.co.jp/getting-started">freee API スタートガイド</a>を参照してください。</p>

<hr />
<h2 id="specification">仕様</h2>

<h3 id="api_endpoint">APIエンドポイント</h3>

<p>https://api.freee.co.jp/hr</p>

<h3 id="about_authorize">認証について</h3>

<p>OAuth2.0を利用します。<a href="https://developer.freee.co.jp/reference/#%e8%aa%8d%e8%a8%bc" target="_blank">詳細はリファレンスの認証に関する記載を参照してください。</a></p>

<h3 id="data_format">データフォーマット</h3>

<p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>

<h3 id="compatibility">後方互換性ありの変更</h3>

<p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>

<ul>
<li>新しいAPIリソース・エンドポイントの追加</li>
<li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li>
<li>既存のAPIレスポンスに対する新しいプロパティの追加</li>
<li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li>
<li>keyとなっているidやcodeの長さの変更（長くする）</li>
<li>エラーメッセージの変更</li>
</ul>

<h3 id="common_response_header">共通レスポンスヘッダー</h3>

<p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>

<ul>
<li>
<p>X-Request-Id</p>
<ul>
<li>各リクエスト毎に発行されるID</li>
</ul>
</li>
</ul>

<h3 id="error_response">共通エラーレスポンス</h3>

<p>APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。</p>

  <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ステータスコード</strong></th>
      <th style="padding: 10px"><strong>原因</strong></th>
    </tr>
    <tr><td style="padding: 10px">400</td><td style="padding: 10px">リクエストパラメータが不正</td></tr>
    <tr><td style="padding: 10px">401</td><td style="padding: 10px">アクセストークンが無効</td></tr>
    <tr><td style="padding: 10px">403</td><td style="padding: 10px">アクセス権限がない</td></tr>
    <tr><td style="padding: 10px">404</td><td style="padding: 10px">リソースが存在しない</td></tr>
    <tr><td style="padding: 10px">429</td><td style="padding: 10px">リクエスト回数制限を超えた</td></tr>
    <tr><td style="padding: 10px">503</td><td style="padding: 10px">システム内で予期しないエラーが発生</td></tr>
  </tbody>
</table>

<p>メッセージボディ内の <code>messages</code> にはエラー内容を説明する文字列が入ります。</p>
<pre><code>  {
    &quot;status_code&quot; : 400,
    &quot;errors&quot; : [
      {
        &quot;type&quot; : &quot;bad_request&quot;,
        &quot;messages&quot; : [
          &quot;リクエストの形式が不正です。&quot;
        ]
      }
    ]
  }  </code></pre>

</br>

<h3 id="api_rate_limit">API使用制限</h3> 
<p>APIリクエストは1時間で10000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。</p>
<pre><code>X-Ratelimit-Limit:10000
X-Ratelimit-Remaining:9998
X-Ratelimit-Reset:2018-01-01T12:00:00.000000Z
</code></pre>

<br> 各ヘッダの意味は次のとおりです。</p>

 <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ヘッダ名</strong></th>
      <th style="padding: 10px"><strong>説明</strong></th>
    </tr>
    <tr><td style="padding: 10px">X-RateLimit-Limit</td><td style="padding: 10px">使用回数の上限</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Remaining</td><td style="padding: 10px">残り使用回数</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Reset</td><td style="padding: 10px">使用回数がリセットされる時刻</td></tr>
  </tbody>
</table>

<p>上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。<br> その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>

</br>

<h3 id="api_rate_limit">プランごとの利用可能API</h3> 

<p>契約プランごとに利用可能なfreee人事労務APIはfreee人事労務のWeb版でご利用できる機能と同様です。例えば、スタンダードプラン（または旧ベーシックプラン）を契約している場合、Web版では打刻機能をご利用いただけますので、APIでもタイムレコーダー(打刻)APIが利用可能です。<a href="https://support.freee.co.jp/hc/ja/articles/203309710" target="_blank">freee人事労務のWeb版のプラン別機能比較はfreee人事労務のプラン・料金についてのヘルプを参照してください。</a></p>

</br>

<hr />
 * OpenAPI spec version: 2022-02-01
 */
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerGender } from './apiV1EmployeesDependentRuleUpdateRequestSerializerGender';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerRelationship } from './apiV1EmployeesDependentRuleUpdateRequestSerializerRelationship';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerResidenceType } from './apiV1EmployeesDependentRuleUpdateRequestSerializerResidenceType';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerDisabilityType } from './apiV1EmployeesDependentRuleUpdateRequestSerializerDisabilityType';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerEmploymentInsuranceReceiveStatus } from './apiV1EmployeesDependentRuleUpdateRequestSerializerEmploymentInsuranceReceiveStatus';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerPhoneType } from './apiV1EmployeesDependentRuleUpdateRequestSerializerPhoneType';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceAndTaxDependent } from './apiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceAndTaxDependent';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceDependentAcquisitionReason } from './apiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceDependentAcquisitionReason';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceDependentDisqualificationReason } from './apiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceDependentDisqualificationReason';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerTaxDependentAcquisitionReason } from './apiV1EmployeesDependentRuleUpdateRequestSerializerTaxDependentAcquisitionReason';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerTaxDependentDisqualificationReason } from './apiV1EmployeesDependentRuleUpdateRequestSerializerTaxDependentDisqualificationReason';
import type { ApiV1EmployeesDependentRuleUpdateRequestSerializerNonResidentDependentsReason } from './apiV1EmployeesDependentRuleUpdateRequestSerializerNonResidentDependentsReason';

export interface ApiV1EmployeesDependentRuleUpdateRequestSerializer {
  /**
   * 家族情報ルールID（idがない場合は新規作成になる)
   * @minimum 1
   * @maximum 2147483647
   */
  id?: number;
  /**
   * 姓 null不可
   * @maxLength 255
   */
  last_name: string;
  /**
   * 名 null不可
   * @maxLength 255
   */
  first_name: string;
  /**
   * 姓カナ
   * @maxLength 255
   */
  last_name_kana?: string;
  /**
   * 名カナ
   * @maxLength 255
   */
  first_name_kana?: string;
  /** 性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択） */
  gender: ApiV1EmployeesDependentRuleUpdateRequestSerializerGender;
  /** 続柄 null不可 spouse: 配偶者, father: 父, mother: 母, child: 子, senior_brother: 兄, junior_brother: 弟, senior_sister: 姉, junior_sister: 妹, grandchild: 孫, grandfather: 祖父, grandmother: 祖母, father_in_law: 義父, mother_in_law: 義母, grandfather_in_law: 義祖父, grandmother_in_law: 義祖母, other: その他, great_grandfather: 曽祖父, great_grandmother: 曽祖母, spouses_child: 配偶者の連れ子 */
  relationship: ApiV1EmployeesDependentRuleUpdateRequestSerializerRelationship;
  /**
   * 生年月日 null不可
   * @maxLength 10
   * @pattern ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
   */
  birth_date: string;
  /** 同居・別居 null不可 live_in: 同居, resident: 別居(国内), non_resident: 別居(国外) */
  residence_type: ApiV1EmployeesDependentRuleUpdateRequestSerializerResidenceType;
  /**
   * 住民票住所の郵便番号1
   * @maxLength 3
   */
  zipcode1?: string;
  /**
   * 住民票住所の郵便番号2
   * @maxLength 4
   */
  zipcode2?: string;
  /**
   * 住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)
   * @minimum -1
   * @maximum 46
   */
  prefecture_code?: number;
  /**
   * 住民票住所の市区町村以降の住所
   * @maxLength 255
   */
  address?: string;
  /**
   * 住民票住所の市区町村以降の住所カナ
   * @maxLength 255
   */
  address_kana?: string;
  /**
   * 基礎年金番号
   * @maxLength 10
   */
  base_pension_num?: string;
  /**
   * 年間所得 null不可
   * @minimum 0
   * @maximum 999999999
   */
  income: number;
  /**
   * 年間収入 null不可
   * @minimum 0
   * @maximum 999999999
   */
  annual_revenue: number;
  /** 障害に該当するか null不可 na: 障害なし, general: 一般の障害者, heavy: 特別障害者 */
  disability_type: ApiV1EmployeesDependentRuleUpdateRequestSerializerDisabilityType;
  /**
   * 職業
   * @maxLength 255
   */
  occupation?: string;
  /**
   * 一年間の送金額
   * @minimum 0
   * @maximum 999999999
   */
  annual_remittance_amount?: number;
  /**
   * 雇用保険受給の有無
- unselected 未選択
- receiving_employment_insurance 雇用保険受給有り
- not_receiving_employment_insurance 雇用保険受給無し
- pending_employment_insurance 申請中
   * @nullable
   */
  employment_insurance_receive_status?: ApiV1EmployeesDependentRuleUpdateRequestSerializerEmploymentInsuranceReceiveStatus;
  /**
   * 雇用保険受給開始年月日 employment_insurance_receive_statusが未選択、無しの場合は指定できません。
   * @nullable
   * @pattern ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
   */
  employment_insurance_receives_from?: string | null;
  /** 健康保険の資格確認書の発行が必要かどうか */
  health_insurance_qualification_required?: boolean;
  /**
   * 電話番号の種別
- unselected 未選択
- home 自宅
- office 勤務先
- mobile 携帯
- other その他
   * @nullable
   */
  phone_type?: ApiV1EmployeesDependentRuleUpdateRequestSerializerPhoneType;
  /**
   * 電話番号1（先頭番号、例:03-1111-222x の03部分）
   * @maxLength 4
   * @nullable
   */
  phone1?: string | null;
  /**
   * 電話番号2（中間番号、例:03-1111-222x の1111部分）
   * @maxLength 4
   * @nullable
   */
  phone2?: string | null;
  /**
   * 電話番号3（末尾番号、例:03-1111-222x の222x部分）
   * @maxLength 4
   * @nullable
   */
  phone3?: string | null;
  /** 家族情報を削除するか */
  destroy?: boolean;
  /** 扶養状況 social_insurance_and_tax: 所得税・住民税と社会保険, tax_only: 所得税・住民税のみ, social_insurance_only: 社会保険のみ, not_dependent: 扶養していない */
  social_insurance_and_tax_dependent: ApiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceAndTaxDependent;
  /**
   * 社会保険の扶養加入日
   * @nullable
   */
  social_insurance_dependent_acquisition_date?: string | null;
  /** 社会保険の扶養加入理由 配偶者の場合 "": 未選択, start_working: 配偶者の就職, marriage: 婚姻, turnover: 離職, decrease_in_income: 収入減少, other: その他 配偶者以外の場合 "": 未選択, birth: 出生, turnover: 離職, decrease_in_income: 収入減, live_in: 同居, other: その他 */
  social_insurance_dependent_acquisition_reason?: ApiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceDependentAcquisitionReason;
  /**
   * 社会保険のその他の扶養加入理由
   * @maxLength 255
   * @nullable
   */
  social_insurance_other_dependent_acquisition_reason?: string | null;
  /**
   * 社会保険の扶養喪失日
   * @nullable
   */
  social_insurance_dependent_disqualification_date?: string | null;
  /** 社会保険の扶養喪失理由 配偶者の場合 "": 未選択, death: 死亡, divorce: 離婚, start_working_or_increase_in_income: 就職・収入増加, reach_75_years_old: 歳到達, disability: 障害認定, other: その他 配偶者以外の場合 "": 未選択, death: 死亡, start_working: 就職, increase_in_income: 収入増加, reach_75_years_old: ７５歳到達, disability: 障害認定, other: その他 */
  social_insurance_dependent_disqualification_reason?: ApiV1EmployeesDependentRuleUpdateRequestSerializerSocialInsuranceDependentDisqualificationReason;
  /**
   * 社会保険のその他の扶養喪失理由
   * @maxLength 255
   * @nullable
   */
  social_insurance_other_dependent_disqualification_reason?: string | null;
  /**
   * 税扶養の加入日
   * @nullable
   */
  tax_dependent_acquisition_date?: string | null;
  /** 税扶養の加入理由 配偶者の場合 "": 未選択, start_working: 配偶者の就職, marriage: 婚姻, turnover: 離職, decrease_in_income: 収入減少, other: その他 配偶者以外の場合 "": birth: 出生, turnover: 離職, decrease_in_income: 収入減, live_in: 同居, other: その他 */
  tax_dependent_acquisition_reason?: ApiV1EmployeesDependentRuleUpdateRequestSerializerTaxDependentAcquisitionReason;
  /**
   * 税扶養のその他の加入理由
   * @maxLength 255
   * @nullable
   */
  tax_other_dependent_acquisition_reason?: string | null;
  /**
   * 税扶養の喪失日
   * @nullable
   */
  tax_dependent_disqualification_date?: string | null;
  /** 税扶養の喪失理由 配偶者の場合 "": 未選択, death: 死亡, divorce: 離婚, start_working_or_increase_in_income: 就職・収入増加, reach_75_years_old: 歳到達, disability: 障害認定, other: その他 配偶者以外の場合 "": 未選択, death: 死亡, start_working: 就職, increase_in_income: 収入増加, reach_75_years_old: ７５歳到達, disability: 障害認定, other: その他 */
  tax_dependent_disqualification_reason?: ApiV1EmployeesDependentRuleUpdateRequestSerializerTaxDependentDisqualificationReason;
  /**
   * 税扶養のその他の喪失理由
   * @maxLength 255
   * @nullable
   */
  tax_other_dependent_disqualification_reason?: string | null;
  /** 非居住者である親族の条件 none: なし, over_16_to_under_30_or_over_70: 16歳以上30歳未満又は70歳以上, study_abroad: 留学, handicapped: 障害者, over_38_man: 38万円以上の支払 */
  non_resident_dependents_reason?: ApiV1EmployeesDependentRuleUpdateRequestSerializerNonResidentDependentsReason;
}
