/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * freee人事労務 API
 * 
<p>freee人事労務のAPI仕様です。</p>

<hr />

<h2 id="start_guide">スタートガイド</h2>

<p>freee API開発がはじめての方は<a href="https://developer.freee.co.jp/getting-started">freee API スタートガイド</a>を参照してください。</p>

<hr />
<h2 id="specification">仕様</h2>

<h3 id="api_endpoint">APIエンドポイント</h3>

<p>https://api.freee.co.jp/hr</p>

<h3 id="about_authorize">認証について</h3>

<p>OAuth2.0を利用します。<a href="https://developer.freee.co.jp/reference/#%e8%aa%8d%e8%a8%bc" target="_blank">詳細はリファレンスの認証に関する記載を参照してください。</a></p>

<h3 id="data_format">データフォーマット</h3>

<p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>

<h3 id="compatibility">後方互換性ありの変更</h3>

<p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>

<ul>
<li>新しいAPIリソース・エンドポイントの追加</li>
<li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li>
<li>既存のAPIレスポンスに対する新しいプロパティの追加</li>
<li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li>
<li>keyとなっているidやcodeの長さの変更（長くする）</li>
<li>エラーメッセージの変更</li>
</ul>

<h3 id="common_response_header">共通レスポンスヘッダー</h3>

<p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>

<ul>
<li>
<p>X-Request-Id</p>
<ul>
<li>各リクエスト毎に発行されるID</li>
</ul>
</li>
</ul>

<h3 id="error_response">共通エラーレスポンス</h3>

<p>APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。</p>

  <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ステータスコード</strong></th>
      <th style="padding: 10px"><strong>原因</strong></th>
    </tr>
    <tr><td style="padding: 10px">400</td><td style="padding: 10px">リクエストパラメータが不正</td></tr>
    <tr><td style="padding: 10px">401</td><td style="padding: 10px">アクセストークンが無効</td></tr>
    <tr><td style="padding: 10px">403</td><td style="padding: 10px">アクセス権限がない</td></tr>
    <tr><td style="padding: 10px">404</td><td style="padding: 10px">リソースが存在しない</td></tr>
    <tr><td style="padding: 10px">429</td><td style="padding: 10px">リクエスト回数制限を超えた</td></tr>
    <tr><td style="padding: 10px">503</td><td style="padding: 10px">システム内で予期しないエラーが発生</td></tr>
  </tbody>
</table>

<p>メッセージボディ内の <code>messages</code> にはエラー内容を説明する文字列が入ります。</p>
<pre><code>  {
    &quot;status_code&quot; : 400,
    &quot;errors&quot; : [
      {
        &quot;type&quot; : &quot;bad_request&quot;,
        &quot;messages&quot; : [
          &quot;リクエストの形式が不正です。&quot;
        ]
      }
    ]
  }  </code></pre>

</br>

<h3 id="api_rate_limit">API使用制限</h3> 
<p>APIリクエストは1時間で10000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。</p>
<pre><code>X-Ratelimit-Limit:10000
X-Ratelimit-Remaining:9998
X-Ratelimit-Reset:2018-01-01T12:00:00.000000Z
</code></pre>

<br> 各ヘッダの意味は次のとおりです。</p>

 <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ヘッダ名</strong></th>
      <th style="padding: 10px"><strong>説明</strong></th>
    </tr>
    <tr><td style="padding: 10px">X-RateLimit-Limit</td><td style="padding: 10px">使用回数の上限</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Remaining</td><td style="padding: 10px">残り使用回数</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Reset</td><td style="padding: 10px">使用回数がリセットされる時刻</td></tr>
  </tbody>
</table>

<p>上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。<br> その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>

</br>

<h3 id="api_rate_limit">プランごとの利用可能API</h3> 

<p>契約プランごとに利用可能なfreee人事労務APIはfreee人事労務のWeb版でご利用できる機能と同様です。例えば、スタンダードプラン（または旧ベーシックプラン）を契約している場合、Web版では打刻機能をご利用いただけますので、APIでもタイムレコーダー(打刻)APIが利用可能です。<a href="https://support.freee.co.jp/hc/ja/articles/203309710" target="_blank">freee人事労務のWeb版のプラン別機能比較はfreee人事労務のプラン・料金についてのヘルプを参照してください。</a></p>

</br>

<hr />
 * OpenAPI spec version: 2022-02-01
 */
import type { ApiV1EmployeesProfileRuleUpdateRequestSerializerEmploymentType } from './apiV1EmployeesProfileRuleUpdateRequestSerializerEmploymentType';
import type { ApiV1EmployeesProfileRuleUpdateRequestSerializerGender } from './apiV1EmployeesProfileRuleUpdateRequestSerializerGender';
import type { ApiV1EmployeesProfileRuleUpdateRequestSerializerWidowType } from './apiV1EmployeesProfileRuleUpdateRequestSerializerWidowType';
import type { ApiV1EmployeesProfileRuleUpdateRequestSerializerDisabilityType } from './apiV1EmployeesProfileRuleUpdateRequestSerializerDisabilityType';
import type { ApiV1EmployeesProfileRuleUpdateRequestSerializerHouseholder } from './apiV1EmployeesProfileRuleUpdateRequestSerializerHouseholder';

export interface ApiV1EmployeesProfileRuleUpdateRequestSerializer {
  /**
   * 姓 null不可
   * @maxLength 255
   */
  last_name: string;
  /**
   * 名 null不可
   * @maxLength 255
   */
  first_name: string;
  /**
   * 姓カナ
   * @maxLength 255
   */
  last_name_kana: string;
  /**
   * 名カナ
   * @maxLength 255
   */
  first_name_kana: string;
  /**
   * 住民票住所の郵便番号1
   * @maxLength 3
   */
  zipcode1?: string;
  /**
   * 住民票住所の郵便番号2
   * @maxLength 4
   */
  zipcode2?: string;
  /**
   * 住民票住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)
   * @minimum -1
   * @maximum 46
   */
  prefecture_code?: number;
  /**
   * 住民票住所の市区町村以降の住所
   * @maxLength 255
   */
  address?: string;
  /**
   * 住民票住所の市区町村以降の住所カナ
   * @maxLength 255
   */
  address_kana?: string;
  /**
   * 電話番号1（先頭番号、例:03-1111-222x の03部分）
   * @maxLength 5
   */
  phone1?: string;
  /**
   * 電話番号2（中間番号、例:03-1111-222x の1111部分）
   * @maxLength 4
   */
  phone2?: string;
  /**
   * 電話番号3（末尾番号、例:03-1111-222x の222x部分）
   * @maxLength 4
   */
  phone3?: string;
  /**
   * 現住所の郵便番号１
   * @maxLength 3
   */
  residential_zipcode1?: string;
  /**
   * 現住所の郵便番号２
   * @maxLength 4
   */
  residential_zipcode2?: string;
  /**
   * 現住所の都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄)
   * @minimum -1
   * @maximum 46
   */
  residential_prefecture_code?: number;
  /**
   * 現住所の住所
   * @maxLength 255
   */
  residential_address?: string;
  /**
   * 現住所の住所カナ
   * @maxLength 255
   */
  residential_address_kana?: string;
  /** 雇用形態 board-member: 役員, regular: 正社員, fixed-term: 契約社員, part-time: アルバイト・パート, temporary: 派遣社員, (空文字列): その他 */
  employment_type?: ApiV1EmployeesProfileRuleUpdateRequestSerializerEmploymentType;
  /**
   * 肩書
   * @maxLength 255
   */
  title?: string;
  /** 性別　unselected: 未選択, male: 男性, female: 女性（デフォルト: unselected: 未選択） */
  gender?: ApiV1EmployeesProfileRuleUpdateRequestSerializerGender;
  /** null不可 配偶者の有無 */
  married?: boolean;
  /** null不可 勤労学生かどうか */
  is_working_student?: boolean;
  /** 寡夫／寡婦かどうか null不可 na: 空白, widower: 寡夫, widow: 寡婦, special_widow: 特別寡婦, one_parent: ひとり親 */
  widow_type?: ApiV1EmployeesProfileRuleUpdateRequestSerializerWidowType;
  /** 障害者かどうか null不可 na: 空白, general: 障害者, heavy: 特別障害者 */
  disability_type?: ApiV1EmployeesProfileRuleUpdateRequestSerializerDisabilityType;
  /**
   * メールアドレス
   * @maxLength 255
   * @nullable
   */
  email?: string | null;
  /**
   * 世帯主の名前<br>世帯主の続柄に myself:本人 を指定している場合は、世帯主の名前は自動で従業員名で更新するため指定できません。
   * @maxLength 255
   */
  householder_name?: string;
  /** 世帯主の続柄 myself:本人, husband:夫, wife:妻, father:父, mother:母, child:子供, senior_brother:兄, junior_brother:弟, senior_sister:姉, junior_sister:妹, grandchild:孫, grandfather:祖父, grandmother:祖母, father_in_law:義父, mother_in_law:義母, grandfather_in_law:義祖父, grandmother_in_law:義祖母, other:その他 */
  householder?: ApiV1EmployeesProfileRuleUpdateRequestSerializerHouseholder;
}
