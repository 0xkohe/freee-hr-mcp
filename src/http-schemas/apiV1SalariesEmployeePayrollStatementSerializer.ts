/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * freee人事労務 API
 * 
<p>freee人事労務のAPI仕様です。</p>

<hr />

<h2 id="start_guide">スタートガイド</h2>

<p>freee API開発がはじめての方は<a href="https://developer.freee.co.jp/getting-started">freee API スタートガイド</a>を参照してください。</p>

<hr />
<h2 id="specification">仕様</h2>

<h3 id="api_endpoint">APIエンドポイント</h3>

<p>https://api.freee.co.jp/hr</p>

<h3 id="about_authorize">認証について</h3>

<p>OAuth2.0を利用します。<a href="https://developer.freee.co.jp/reference/#%e8%aa%8d%e8%a8%bc" target="_blank">詳細はリファレンスの認証に関する記載を参照してください。</a></p>

<h3 id="data_format">データフォーマット</h3>

<p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>

<h3 id="compatibility">後方互換性ありの変更</h3>

<p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>

<ul>
<li>新しいAPIリソース・エンドポイントの追加</li>
<li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li>
<li>既存のAPIレスポンスに対する新しいプロパティの追加</li>
<li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li>
<li>keyとなっているidやcodeの長さの変更（長くする）</li>
<li>エラーメッセージの変更</li>
</ul>

<h3 id="common_response_header">共通レスポンスヘッダー</h3>

<p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>

<ul>
<li>
<p>X-Request-Id</p>
<ul>
<li>各リクエスト毎に発行されるID</li>
</ul>
</li>
</ul>

<h3 id="error_response">共通エラーレスポンス</h3>

<p>APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。</p>

  <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ステータスコード</strong></th>
      <th style="padding: 10px"><strong>原因</strong></th>
    </tr>
    <tr><td style="padding: 10px">400</td><td style="padding: 10px">リクエストパラメータが不正</td></tr>
    <tr><td style="padding: 10px">401</td><td style="padding: 10px">アクセストークンが無効</td></tr>
    <tr><td style="padding: 10px">403</td><td style="padding: 10px">アクセス権限がない</td></tr>
    <tr><td style="padding: 10px">404</td><td style="padding: 10px">リソースが存在しない</td></tr>
    <tr><td style="padding: 10px">429</td><td style="padding: 10px">リクエスト回数制限を超えた</td></tr>
    <tr><td style="padding: 10px">503</td><td style="padding: 10px">システム内で予期しないエラーが発生</td></tr>
  </tbody>
</table>

<p>メッセージボディ内の <code>messages</code> にはエラー内容を説明する文字列が入ります。</p>
<pre><code>  {
    &quot;status_code&quot; : 400,
    &quot;errors&quot; : [
      {
        &quot;type&quot; : &quot;bad_request&quot;,
        &quot;messages&quot; : [
          &quot;リクエストの形式が不正です。&quot;
        ]
      }
    ]
  }  </code></pre>

</br>

<h3 id="api_rate_limit">API使用制限</h3> 
<p>APIリクエストは1時間で10000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。</p>
<pre><code>X-Ratelimit-Limit:10000
X-Ratelimit-Remaining:9998
X-Ratelimit-Reset:2018-01-01T12:00:00.000000Z
</code></pre>

<br> 各ヘッダの意味は次のとおりです。</p>

 <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ヘッダ名</strong></th>
      <th style="padding: 10px"><strong>説明</strong></th>
    </tr>
    <tr><td style="padding: 10px">X-RateLimit-Limit</td><td style="padding: 10px">使用回数の上限</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Remaining</td><td style="padding: 10px">残り使用回数</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Reset</td><td style="padding: 10px">使用回数がリセットされる時刻</td></tr>
  </tbody>
</table>

<p>上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。<br> その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>

</br>

<h3 id="api_rate_limit">プランごとの利用可能API</h3> 

<p>契約プランごとに利用可能なfreee人事労務APIはfreee人事労務のWeb版でご利用できる機能と同様です。例えば、スタンダードプラン（または旧ベーシックプラン）を契約している場合、Web版では打刻機能をご利用いただけますので、APIでもタイムレコーダー(打刻)APIが利用可能です。<a href="https://support.freee.co.jp/hc/ja/articles/203309710" target="_blank">freee人事労務のWeb版のプラン別機能比較はfreee人事労務のプラン・料金についてのヘルプを参照してください。</a></p>

</br>

<hr />
 * OpenAPI spec version: 2022-02-01
 */
import type { ApiV1SalariesEmployeePayrollStatementSerializerPayCalcType } from './apiV1SalariesEmployeePayrollStatementSerializerPayCalcType';
import type { ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer } from './apiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer';
import type { ApiV1EmployeePayrollStatementsEmployeeAttendanceItemSerializer } from './apiV1EmployeePayrollStatementsEmployeeAttendanceItemSerializer';
import type { ApiV1EmployeePayrollStatementsEmployeeOvertimePayItemSerializer } from './apiV1EmployeePayrollStatementsEmployeeOvertimePayItemSerializer';

export interface ApiV1SalariesEmployeePayrollStatementSerializer {
  /** 給与明細ID */
  id?: number;
  /** 事業所ID */
  company_id?: number;
  /** 従業員ID */
  employee_id?: number;
  /** 従業員の姓名 */
  employee_name?: string;
  /** 従業員の表示名 */
  employee_display_name?: string;
  /**
   * 従業員番号
   * @nullable
   */
  employee_num?: string | null;
  /** 支払日 */
  pay_date?: string;
  /** 給与計算開始日（固定給） */
  start_date?: string;
  /** 給与計算締日（固定給） */
  closing_date?: string;
  /** 給与計算開始日（変動給） 残業手当、遅刻早退・欠勤などの計算に使われる期間 */
  variable_pay_start_date?: string;
  /** 給与計算締日（変動給） */
  variable_pay_closing_date?: string;
  /** 給与明細が確定されているかどうか */
  fixed?: boolean;
  /** 計算状況ステータス calculating: 計算中, calculated: 計算完了, overwritten: 直接編集, imported: インポート, error: エラー */
  calc_status?: string;
  /**
   * 計算状況ステータスの更新日
   * @nullable
   */
  calculated_at?: string | null;
  /** 給与形態 monthly: 月給, daily: 日給, hourly: 時給, (空文字列): 計算中 */
  pay_calc_type?: ApiV1SalariesEmployeePayrollStatementSerializerPayCalcType;
  /**
   * 役員報酬
   * @nullable
   */
  board_member_remuneration_amount?: string | null;
  /**
   * 基本給
   * @nullable
   */
  basic_pay_amount?: string | null;
  /**
   * 労働日数
   * @nullable
   */
  work_days?: string | null;
  /**
   * 労働時間のうち、所定労働時間に該当するもの
   * @nullable
   */
  normal_work_time?: string | null;
  /**
   * 所定労働出勤日数
   * @nullable
   */
  normal_work_days?: string | null;
  /**
   * 有給休暇時間数
   * @nullable
   */
  work_mins_by_paid_holiday?: string | null;
  /**
   * 有給日数
   * @nullable
   */
  num_paid_holidays?: string | null;
  /** 役員かどうか */
  is_board_member?: boolean;
  /**
   * 勤怠控除額合計
   * @nullable
   */
  total_attendance_deduction_amount?: string | null;
  /**
   * 支給手当額合計
   * @nullable
   */
  total_allowance_amount?: string | null;
  /**
   * 控除額合計
   * @nullable
   */
  total_deduction_amount?: string | null;
  /**
   * 法定福利費の会社負担分の合計（健康保険、厚生年金、雇用保険等）
   * @nullable
   */
  total_deduction_employer_share?: string | null;
  /**
   * 差引支給額(手取り額)
   * @nullable
   */
  net_payment_amount?: string | null;
  /**
   * 総支給額(額面)
   * @nullable
   */
  gross_payment_amount?: string | null;
  /**
   * 平日と休日の合計労働日数（日給用）
   * @nullable
   */
  total_worked_days_count?: string | null;
  /**
   * 課税対象支給額
   * @nullable
   */
  total_taxable_payment_amount?: string | null;
  /**
   * 総経費精算額
   * @nullable
   */
  total_expense_amount?: string | null;
  /**
   * 総振込額
   * @nullable
   */
  total_transfer_amount?: string | null;
  /**
   * 課税支給累計額
   * @nullable
   */
  total_annual_payment_amount?: string | null;
  /** 支給項目（基本給、残業代、通勤手当等） */
  payments?: ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer[];
  /** 控除項目（健康保険、厚生年金、雇用保険等） */
  deductions?: ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer[];
  /** 法定福利費の会社負担分（健康保険、厚生年金、雇用保険等） */
  deductions_employer_share?: ApiV1EmployeePayrollStatementsEmployeePayrollStatementItemSerializer[];
  /** 勤怠控除項目（遅刻早退控除、欠勤控除等） */
  attendances?: ApiV1EmployeePayrollStatementsEmployeeAttendanceItemSerializer[];
  /**
   * 時間外労働項目(法定内残業、時間外労働、休日労働、深夜労働等)
   * @nullable
   */
  overtime_pays?: ApiV1EmployeePayrollStatementsEmployeeOvertimePayItemSerializer[] | null;
  /**
   * 備考
   * @nullable
   */
  remark?: string | null;
}
