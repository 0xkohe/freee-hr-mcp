/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * freee人事労務 API
 * 
<p>freee人事労務のAPI仕様です。</p>

<hr />

<h2 id="start_guide">スタートガイド</h2>

<p>freee API開発がはじめての方は<a href="https://developer.freee.co.jp/getting-started">freee API スタートガイド</a>を参照してください。</p>

<hr />
<h2 id="specification">仕様</h2>

<h3 id="api_endpoint">APIエンドポイント</h3>

<p>https://api.freee.co.jp/hr</p>

<h3 id="about_authorize">認証について</h3>

<p>OAuth2.0を利用します。<a href="https://developer.freee.co.jp/reference/#%e8%aa%8d%e8%a8%bc" target="_blank">詳細はリファレンスの認証に関する記載を参照してください。</a></p>

<h3 id="data_format">データフォーマット</h3>

<p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>

<h3 id="compatibility">後方互換性ありの変更</h3>

<p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>

<ul>
<li>新しいAPIリソース・エンドポイントの追加</li>
<li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li>
<li>既存のAPIレスポンスに対する新しいプロパティの追加</li>
<li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li>
<li>keyとなっているidやcodeの長さの変更（長くする）</li>
<li>エラーメッセージの変更</li>
</ul>

<h3 id="common_response_header">共通レスポンスヘッダー</h3>

<p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>

<ul>
<li>
<p>X-Request-Id</p>
<ul>
<li>各リクエスト毎に発行されるID</li>
</ul>
</li>
</ul>

<h3 id="error_response">共通エラーレスポンス</h3>

<p>APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。</p>

  <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ステータスコード</strong></th>
      <th style="padding: 10px"><strong>原因</strong></th>
    </tr>
    <tr><td style="padding: 10px">400</td><td style="padding: 10px">リクエストパラメータが不正</td></tr>
    <tr><td style="padding: 10px">401</td><td style="padding: 10px">アクセストークンが無効</td></tr>
    <tr><td style="padding: 10px">403</td><td style="padding: 10px">アクセス権限がない</td></tr>
    <tr><td style="padding: 10px">404</td><td style="padding: 10px">リソースが存在しない</td></tr>
    <tr><td style="padding: 10px">429</td><td style="padding: 10px">リクエスト回数制限を超えた</td></tr>
    <tr><td style="padding: 10px">503</td><td style="padding: 10px">システム内で予期しないエラーが発生</td></tr>
  </tbody>
</table>

<p>メッセージボディ内の <code>messages</code> にはエラー内容を説明する文字列が入ります。</p>
<pre><code>  {
    &quot;status_code&quot; : 400,
    &quot;errors&quot; : [
      {
        &quot;type&quot; : &quot;bad_request&quot;,
        &quot;messages&quot; : [
          &quot;リクエストの形式が不正です。&quot;
        ]
      }
    ]
  }  </code></pre>

</br>

<h3 id="api_rate_limit">API使用制限</h3> 
<p>APIリクエストは1時間で10000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。</p>
<pre><code>X-Ratelimit-Limit:10000
X-Ratelimit-Remaining:9998
X-Ratelimit-Reset:2018-01-01T12:00:00.000000Z
</code></pre>

<br> 各ヘッダの意味は次のとおりです。</p>

 <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ヘッダ名</strong></th>
      <th style="padding: 10px"><strong>説明</strong></th>
    </tr>
    <tr><td style="padding: 10px">X-RateLimit-Limit</td><td style="padding: 10px">使用回数の上限</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Remaining</td><td style="padding: 10px">残り使用回数</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Reset</td><td style="padding: 10px">使用回数がリセットされる時刻</td></tr>
  </tbody>
</table>

<p>上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。<br> その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>

</br>

<h3 id="api_rate_limit">プランごとの利用可能API</h3> 

<p>契約プランごとに利用可能なfreee人事労務APIはfreee人事労務のWeb版でご利用できる機能と同様です。例えば、スタンダードプラン（または旧ベーシックプラン）を契約している場合、Web版では打刻機能をご利用いただけますので、APIでもタイムレコーダー(打刻)APIが利用可能です。<a href="https://support.freee.co.jp/hc/ja/articles/203309710" target="_blank">freee人事労務のWeb版のプラン別機能比較はfreee人事労務のプラン・料金についてのヘルプを参照してください。</a></p>

</br>

<hr />
 * OpenAPI spec version: 2022-02-01
 */
import type { ApiV1EmployeesWorkRecordTimeRangeResponseSerializer } from './apiV1EmployeesWorkRecordTimeRangeResponseSerializer';
import type { LegacyApiV1EmployeesWorkRecordSerializerDayPattern } from './legacyApiV1EmployeesWorkRecordSerializerDayPattern';
import type { LegacyApiV1EmployeesWorkRecordSerializerSchedulePattern } from './legacyApiV1EmployeesWorkRecordSerializerSchedulePattern';

export interface LegacyApiV1EmployeesWorkRecordSerializer {
  /** 休憩時間のリスト */
  break_records?: ApiV1EmployeesWorkRecordTimeRangeResponseSerializer[];
  /** 出退勤のリスト
  - 登録されている全ての出退勤時間のリストを返します。 */
  work_record_segments?: ApiV1EmployeesWorkRecordTimeRangeResponseSerializer[];
  /**
   * 出勤時刻
  - 出勤時刻を返します。出退勤が複数登録されている場合は、最初の出退勤の出勤時間を返します。
   * @nullable
   */
  clock_in_at?: string | null;
  /**
   * 退勤時刻
  - 退勤時刻を返します。出退勤が複数登録されている場合は、最後の出退勤の退勤時間を返します。
   * @nullable
   */
  clock_out_at?: string | null;
  /** 対象日付 */
  date?: string;
  /** 勤務パターン
- normal_day: 所定労働日
- prescribed_holiday: 所定休日
- legal_holiday: 法定休日 */
  day_pattern?: LegacyApiV1EmployeesWorkRecordSerializerDayPattern;
  /** スケジュールパターン
- substitute_holiday_work: 振替出勤
- substitute_holiday: 振替休日
- compensatory_holiday_work: 代休出勤
- compensatory_holiday: 代休
- special_holiday: 特別休暇 */
  schedule_pattern?: LegacyApiV1EmployeesWorkRecordSerializerSchedulePattern;
  /** 早退分の時間（分単位） */
  early_leaving_mins?: number;
  /** [deprecated] 有給休暇の半休を利用した時間（分単位）※ 削除予定のため paid_holidays を参照してください */
  half_paid_holiday_mins?: number;
  /** 特別休暇の半休を利用した時間（分単位） */
  half_special_holiday_mins?: number;
  /** [deprecated] 有給休暇の時間休を利用した時間（分単位）※ 削除予定のため paid_holidays を参照してください */
  hourly_paid_holiday_mins?: number;
  /** 特別休暇の時間休を利用した時間（分単位） */
  hourly_special_holiday_mins?: number;
  /** 欠勤かどうか */
  is_absence?: boolean;
  /** 勤怠データが編集可能かどうか */
  is_editable?: boolean;
  /** 遅刻分の時間（分単位） */
  lateness_mins?: number;
  /**
   * 所定労働開始時刻
   * @nullable
   */
  normal_work_clock_in_at?: string | null;
  /**
   * 所定労働終了時刻
   * @nullable
   */
  normal_work_clock_out_at?: string | null;
  /** 所定労働時間 */
  normal_work_mins?: number;
  /**
   * 勤怠メモ
   * @maxLength 255
   */
  note?: string;
  /** [deprecated] この日に対する有給取得日数。半休の場合は0.5が入ります。時間休の場合はhourly_paid_holiday_minsを所定労働時間で割った値が入るため、実際の時間を確認するにはhourly_paid_holiday_minsを参照してください。※ 削除予定のため paid_holidays を参照してください */
  paid_holiday?: number;
  /** この日に対する特別休暇取得日数。半休の場合は0.5が入ります。時間休の場合はhourly_special_holiday_minsを所定労働時間で割った値が入るため、実際の時間を確認するにはhourly_special_holiday_minsを参照してください。 */
  special_holiday?: number;
  /**
   * 特別休暇設定ID
   * @nullable
   */
  special_holiday_setting_id?: number | null;
  /** 欠勤・遅刻・早退を控除対象時間に算入するかどうか */
  use_attendance_deduction?: boolean;
  /** デフォルトの勤務時間設定を使っているかどうか */
  use_default_work_pattern?: boolean;
  /** 代休の半休を利用したかどうか */
  use_half_compensatory_holiday?: boolean;
  /** 時間外労働時間（分）（Webの勤怠登録画面にて詳細項目の「勤務時間の長さを自動で計算しない」にチェックを入れた場合0が返却されます。時間外労働時間はtotal_overtime_except_normal_work_minsを参照してください。） */
  total_overtime_work_mins?: number;
  /** 休日労働時間（分） */
  total_holiday_work_mins?: number;
  /** 深夜労働時間（分） */
  total_latenight_work_mins?: number;
  /** 勤怠登録時に勤務時間の長さを自動で計算しないかどうか */
  not_auto_calc_work_time?: boolean;
  /** 法定内残業時間（分） */
  total_excess_statutory_work_mins?: number;
  /** 深夜の法定内残業時間（分） */
  total_latenight_excess_statutory_work_mins?: number;
  /** 所定外法定外労働時間（分） */
  total_overtime_except_normal_work_mins?: number;
  /** 深夜の所定外法定外労働時間（分） */
  total_latenight_overtime_except_normal_work_min?: number;
}
