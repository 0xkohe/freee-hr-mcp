/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * freee人事労務 API
 * 
<p>freee人事労務のAPI仕様です。</p>

<hr />

<h2 id="start_guide">スタートガイド</h2>

<p>freee API開発がはじめての方は<a href="https://developer.freee.co.jp/getting-started">freee API スタートガイド</a>を参照してください。</p>

<hr />
<h2 id="specification">仕様</h2>

<h3 id="api_endpoint">APIエンドポイント</h3>

<p>https://api.freee.co.jp/hr</p>

<h3 id="about_authorize">認証について</h3>

<p>OAuth2.0を利用します。<a href="https://developer.freee.co.jp/reference/#%e8%aa%8d%e8%a8%bc" target="_blank">詳細はリファレンスの認証に関する記載を参照してください。</a></p>

<h3 id="data_format">データフォーマット</h3>

<p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>

<h3 id="compatibility">後方互換性ありの変更</h3>

<p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>

<ul>
<li>新しいAPIリソース・エンドポイントの追加</li>
<li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li>
<li>既存のAPIレスポンスに対する新しいプロパティの追加</li>
<li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li>
<li>keyとなっているidやcodeの長さの変更（長くする）</li>
<li>エラーメッセージの変更</li>
</ul>

<h3 id="common_response_header">共通レスポンスヘッダー</h3>

<p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>

<ul>
<li>
<p>X-Request-Id</p>
<ul>
<li>各リクエスト毎に発行されるID</li>
</ul>
</li>
</ul>

<h3 id="error_response">共通エラーレスポンス</h3>

<p>APIリクエストでエラーが発生した場合は、エラー原因に応じたステータスコードおよびメッセージを返します。</p>

  <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ステータスコード</strong></th>
      <th style="padding: 10px"><strong>原因</strong></th>
    </tr>
    <tr><td style="padding: 10px">400</td><td style="padding: 10px">リクエストパラメータが不正</td></tr>
    <tr><td style="padding: 10px">401</td><td style="padding: 10px">アクセストークンが無効</td></tr>
    <tr><td style="padding: 10px">403</td><td style="padding: 10px">アクセス権限がない</td></tr>
    <tr><td style="padding: 10px">404</td><td style="padding: 10px">リソースが存在しない</td></tr>
    <tr><td style="padding: 10px">429</td><td style="padding: 10px">リクエスト回数制限を超えた</td></tr>
    <tr><td style="padding: 10px">503</td><td style="padding: 10px">システム内で予期しないエラーが発生</td></tr>
  </tbody>
</table>

<p>メッセージボディ内の <code>messages</code> にはエラー内容を説明する文字列が入ります。</p>
<pre><code>  {
    &quot;status_code&quot; : 400,
    &quot;errors&quot; : [
      {
        &quot;type&quot; : &quot;bad_request&quot;,
        &quot;messages&quot; : [
          &quot;リクエストの形式が不正です。&quot;
        ]
      }
    ]
  }  </code></pre>

</br>

<h3 id="api_rate_limit">API使用制限</h3> 
<p>APIリクエストは1時間で10000回を上限としています。API使用ステータスはレスポンスヘッダに付与されます。</p>
<pre><code>X-Ratelimit-Limit:10000
X-Ratelimit-Remaining:9998
X-Ratelimit-Reset:2018-01-01T12:00:00.000000Z
</code></pre>

<br> 各ヘッダの意味は次のとおりです。</p>

 <table border="1">
  <tbody>
    <tr>
      <th style="padding: 10px"><strong>ヘッダ名</strong></th>
      <th style="padding: 10px"><strong>説明</strong></th>
    </tr>
    <tr><td style="padding: 10px">X-RateLimit-Limit</td><td style="padding: 10px">使用回数の上限</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Remaining</td><td style="padding: 10px">残り使用回数</td></tr>
    <tr><td style="padding: 10px">X-RateLimit-Reset</td><td style="padding: 10px">使用回数がリセットされる時刻</td></tr>
  </tbody>
</table>

<p>上記に加え、freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。<br> その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>

</br>

<h3 id="api_rate_limit">プランごとの利用可能API</h3> 

<p>契約プランごとに利用可能なfreee人事労務APIはfreee人事労務のWeb版でご利用できる機能と同様です。例えば、スタンダードプラン（または旧ベーシックプラン）を契約している場合、Web版では打刻機能をご利用いただけますので、APIでもタイムレコーダー(打刻)APIが利用可能です。<a href="https://support.freee.co.jp/hc/ja/articles/203309710" target="_blank">freee人事労務のWeb版のプラン別機能比較はfreee人事労務のプラン・料金についてのヘルプを参照してください。</a></p>

</br>

<hr />
 * OpenAPI spec version: 2022-02-01
 */

import {
  McpServer
} from '@modelcontextprotocol/sdk/server/mcp.js';
  
import {
  StdioServerTransport
} from '@modelcontextprotocol/sdk/server/stdio.js';  

import {
  getUsersMeHandler,
  getCompanyEmployeesHandler,
  getEmployeesHandler,
  createEmployeeHandler,
  getEmployeeHandler,
  updateEmployeeHandler,
  destroyEmployeeHandler,
  getEmployeeProfileRuleHandler,
  updateEmployeeProfileRuleHandler,
  getEmployeeHealthInsuranceRuleHandler,
  updateEmployeeHealthInsuranceRuleHandler,
  getEmployeeWelfarePensionInsuranceRuleHandler,
  updateEmployeeWelfarePensionInsuranceRuleHandler,
  getEmployeeDependentRulesHandler,
  bulkUpdateEmployeeDependentRulesHandler,
  getEmployeeBankAccountRuleHandler,
  updateEmployeeBankAccountRuleHandler,
  getEmployeeBasicPayRuleHandler,
  updateEmployeeBasicPayRuleHandler,
  getEmployeeProfileCustomFieldsRuleHandler,
  getEmployeeWorkRecordHandler,
  updateEmployeeWorkRecordHandler,
  destroyEmployeeWorkRecordHandler,
  getEmployeeWorkRecordSummaryHandler,
  updateEmployeeWorkRecordSummaryHandler,
  getEmployeeTimeClocksHandler,
  createEmployeeTimeClockHandler,
  getEmployeeTimeClockHandler,
  getEmployeeTimeClocksAvailableTypesHandler,
  getEmployeesSpecialHolidaysHandler,
  getEmployeesAttendanceTagSummariesHandler,
  updateEmployeesAttendanceTagSummariesHandler,
  getEmployeesAttendanceTagsHandler,
  getEmployeesAttendanceTagsByDateHandler,
  updateEmployeesAttendanceTagsHandler,
  getSalariesEmployeePayrollStatementsHandler,
  getSalariesEmployeePayrollStatementHandler,
  getBonusesEmployeePayrollStatementsHandler,
  getBonusesEmployeePayrollStatementHandler,
  getEmployeeGroupMembershipsHandler,
  getGroupsHandler,
  createGroupHandler,
  updateGroupHandler,
  destroyGroupHandler,
  getPositionsHandler,
  createPositionHandler,
  updatePositionHandler,
  destroyPositionHandler,
  getApprovalRequestsMonthlyAttendancesHandler,
  createApprovalRequestsMonthlyAttendanceHandler,
  getApprovalRequestsMonthlyAttendanceHandler,
  updateApprovalRequestsMonthlyAttendanceHandler,
  destroyApprovalRequestsMonthlyAttendanceHandler,
  actionApprovalRequestsMonthlyAttendanceHandler,
  getApprovalRequestsWorkTimesHandler,
  createApprovalRequestsWorkTimeHandler,
  getApprovalRequestsWorkTimeHandler,
  updateApprovalRequestsWorkTimeHandler,
  destroyApprovalRequestsWorkTimeHandler,
  actionApprovalRequestsWorkTimeHandler,
  getApprovalRequestsPaidHolidaysHandler,
  createApprovalRequestsPaidHolidayHandler,
  getApprovalRequestsPaidHolidayHandler,
  updateApprovalRequestsPaidHolidayHandler,
  destroyApprovalRequestsPaidHolidayHandler,
  actionApprovalRequestsPaidHolidayHandler,
  getApprovalRequestsSpecialHolidaysHandler,
  createApprovalRequestsSpecialHolidayHandler,
  getApprovalRequestsSpecialHolidayHandler,
  updateApprovalRequestsSpecialHolidayHandler,
  destroyApprovalRequestsSpecialHolidayHandler,
  actionApprovalRequestsSpecialHolidayHandler,
  getApprovalRequestsOvertimeWorksHandler,
  createApprovalRequestsOvertimeWorkHandler,
  getApprovalRequestsOvertimeWorkHandler,
  updateApprovalRequestsOvertimeWorkHandler,
  destroyApprovalRequestsOvertimeWorkHandler,
  actionApprovalRequestsOvertimeWorkHandler,
  getApprovalRequestsOvertimeWorkSettingHandler,
  getApprovalFlowRoutesHandler,
  getApprovalFlowRouteHandler,
  getYearendAdjustmentEmployeesHandler,
  getYearendAdjustmentEmployeeHandler,
  putYearendAdjustmentEmployeeHandler,
  putYearendAdjustmentPayrollAndBonusHandler,
  putYearendAdjustmentDependentsHandler,
  putYearendAdjustmentPreviousJobHandler,
  destroyYearendAdjustmentPreviousJobHandler,
  postYearendAdjustmentInsurancesHandler,
  putYearendAdjustmentInsurancesHandler,
  destroyYearendAdjustmentInsurancesHandler,
  putYearendAdjustmentHousingLoanDeductionHandler,
  postYearendAdjustmentHousingLoanHandler,
  putYearendAdjustmentHousingLoanHandler,
  destroyYearendAdjustmentHousingLoanHandler
} from './handlers';
import {
  getCompanyEmployeesParams,
  getCompanyEmployeesQueryParams,
  getEmployeesQueryParams,
  createEmployeeBody,
  getEmployeeParams,
  getEmployeeQueryParams,
  updateEmployeeParams,
  updateEmployeeBody,
  destroyEmployeeParams,
  destroyEmployeeQueryParams,
  getEmployeeProfileRuleParams,
  getEmployeeProfileRuleQueryParams,
  updateEmployeeProfileRuleParams,
  updateEmployeeProfileRuleBody,
  getEmployeeHealthInsuranceRuleParams,
  getEmployeeHealthInsuranceRuleQueryParams,
  updateEmployeeHealthInsuranceRuleParams,
  updateEmployeeHealthInsuranceRuleBody,
  getEmployeeWelfarePensionInsuranceRuleParams,
  getEmployeeWelfarePensionInsuranceRuleQueryParams,
  updateEmployeeWelfarePensionInsuranceRuleParams,
  updateEmployeeWelfarePensionInsuranceRuleBody,
  getEmployeeDependentRulesParams,
  getEmployeeDependentRulesQueryParams,
  bulkUpdateEmployeeDependentRulesParams,
  bulkUpdateEmployeeDependentRulesBody,
  getEmployeeBankAccountRuleParams,
  getEmployeeBankAccountRuleQueryParams,
  updateEmployeeBankAccountRuleParams,
  updateEmployeeBankAccountRuleBody,
  getEmployeeBasicPayRuleParams,
  getEmployeeBasicPayRuleQueryParams,
  updateEmployeeBasicPayRuleParams,
  updateEmployeeBasicPayRuleBody,
  getEmployeeProfileCustomFieldsRuleParams,
  getEmployeeProfileCustomFieldsRuleQueryParams,
  getEmployeeWorkRecordParams,
  getEmployeeWorkRecordQueryParams,
  updateEmployeeWorkRecordParams,
  updateEmployeeWorkRecordBody,
  destroyEmployeeWorkRecordParams,
  destroyEmployeeWorkRecordQueryParams,
  getEmployeeWorkRecordSummaryParams,
  getEmployeeWorkRecordSummaryQueryParams,
  updateEmployeeWorkRecordSummaryParams,
  updateEmployeeWorkRecordSummaryBody,
  getEmployeeTimeClocksParams,
  getEmployeeTimeClocksQueryParams,
  createEmployeeTimeClockParams,
  createEmployeeTimeClockBody,
  getEmployeeTimeClockParams,
  getEmployeeTimeClockQueryParams,
  getEmployeeTimeClocksAvailableTypesParams,
  getEmployeeTimeClocksAvailableTypesQueryParams,
  getEmployeesSpecialHolidaysParams,
  getEmployeesSpecialHolidaysQueryParams,
  getEmployeesAttendanceTagSummariesParams,
  getEmployeesAttendanceTagSummariesQueryParams,
  updateEmployeesAttendanceTagSummariesParams,
  updateEmployeesAttendanceTagSummariesBody,
  getEmployeesAttendanceTagsParams,
  getEmployeesAttendanceTagsQueryParams,
  getEmployeesAttendanceTagsByDateParams,
  getEmployeesAttendanceTagsByDateQueryParams,
  updateEmployeesAttendanceTagsParams,
  updateEmployeesAttendanceTagsBody,
  getSalariesEmployeePayrollStatementsQueryParams,
  getSalariesEmployeePayrollStatementParams,
  getSalariesEmployeePayrollStatementQueryParams,
  getBonusesEmployeePayrollStatementsQueryParams,
  getBonusesEmployeePayrollStatementParams,
  getBonusesEmployeePayrollStatementQueryParams,
  getEmployeeGroupMembershipsQueryParams,
  getGroupsQueryParams,
  createGroupBody,
  updateGroupParams,
  updateGroupBody,
  destroyGroupParams,
  destroyGroupQueryParams,
  getPositionsQueryParams,
  createPositionBody,
  updatePositionParams,
  updatePositionBody,
  destroyPositionParams,
  destroyPositionQueryParams,
  getApprovalRequestsMonthlyAttendancesQueryParams,
  createApprovalRequestsMonthlyAttendanceBody,
  getApprovalRequestsMonthlyAttendanceParams,
  getApprovalRequestsMonthlyAttendanceQueryParams,
  updateApprovalRequestsMonthlyAttendanceParams,
  updateApprovalRequestsMonthlyAttendanceBody,
  destroyApprovalRequestsMonthlyAttendanceParams,
  destroyApprovalRequestsMonthlyAttendanceQueryParams,
  actionApprovalRequestsMonthlyAttendanceParams,
  actionApprovalRequestsMonthlyAttendanceBody,
  getApprovalRequestsWorkTimesQueryParams,
  createApprovalRequestsWorkTimeBody,
  getApprovalRequestsWorkTimeParams,
  getApprovalRequestsWorkTimeQueryParams,
  updateApprovalRequestsWorkTimeParams,
  updateApprovalRequestsWorkTimeBody,
  destroyApprovalRequestsWorkTimeParams,
  destroyApprovalRequestsWorkTimeQueryParams,
  actionApprovalRequestsWorkTimeParams,
  actionApprovalRequestsWorkTimeBody,
  getApprovalRequestsPaidHolidaysQueryParams,
  createApprovalRequestsPaidHolidayBody,
  getApprovalRequestsPaidHolidayParams,
  getApprovalRequestsPaidHolidayQueryParams,
  updateApprovalRequestsPaidHolidayParams,
  updateApprovalRequestsPaidHolidayBody,
  destroyApprovalRequestsPaidHolidayParams,
  destroyApprovalRequestsPaidHolidayQueryParams,
  actionApprovalRequestsPaidHolidayParams,
  actionApprovalRequestsPaidHolidayBody,
  getApprovalRequestsSpecialHolidaysQueryParams,
  createApprovalRequestsSpecialHolidayBody,
  getApprovalRequestsSpecialHolidayParams,
  getApprovalRequestsSpecialHolidayQueryParams,
  updateApprovalRequestsSpecialHolidayParams,
  updateApprovalRequestsSpecialHolidayBody,
  destroyApprovalRequestsSpecialHolidayParams,
  destroyApprovalRequestsSpecialHolidayQueryParams,
  actionApprovalRequestsSpecialHolidayParams,
  actionApprovalRequestsSpecialHolidayBody,
  getApprovalRequestsOvertimeWorksQueryParams,
  createApprovalRequestsOvertimeWorkBody,
  getApprovalRequestsOvertimeWorkParams,
  getApprovalRequestsOvertimeWorkQueryParams,
  updateApprovalRequestsOvertimeWorkParams,
  updateApprovalRequestsOvertimeWorkBody,
  destroyApprovalRequestsOvertimeWorkParams,
  destroyApprovalRequestsOvertimeWorkQueryParams,
  actionApprovalRequestsOvertimeWorkParams,
  actionApprovalRequestsOvertimeWorkBody,
  getApprovalRequestsOvertimeWorkSettingQueryParams,
  getApprovalFlowRoutesQueryParams,
  getApprovalFlowRouteParams,
  getApprovalFlowRouteQueryParams,
  getYearendAdjustmentEmployeesParams,
  getYearendAdjustmentEmployeesQueryParams,
  getYearendAdjustmentEmployeeParams,
  getYearendAdjustmentEmployeeQueryParams,
  putYearendAdjustmentEmployeeParams,
  putYearendAdjustmentEmployeeBody,
  putYearendAdjustmentPayrollAndBonusParams,
  putYearendAdjustmentPayrollAndBonusBody,
  putYearendAdjustmentDependentsParams,
  putYearendAdjustmentDependentsBody,
  putYearendAdjustmentPreviousJobParams,
  putYearendAdjustmentPreviousJobBody,
  destroyYearendAdjustmentPreviousJobParams,
  destroyYearendAdjustmentPreviousJobQueryParams,
  postYearendAdjustmentInsurancesParams,
  postYearendAdjustmentInsurancesBody,
  putYearendAdjustmentInsurancesParams,
  putYearendAdjustmentInsurancesBody,
  destroyYearendAdjustmentInsurancesParams,
  destroyYearendAdjustmentInsurancesQueryParams,
  putYearendAdjustmentHousingLoanDeductionParams,
  putYearendAdjustmentHousingLoanDeductionBody,
  postYearendAdjustmentHousingLoanParams,
  postYearendAdjustmentHousingLoanBody,
  putYearendAdjustmentHousingLoanParams,
  putYearendAdjustmentHousingLoanBody,
  destroyYearendAdjustmentHousingLoanParams,
  destroyYearendAdjustmentHousingLoanQueryParams
} from './tool-schemas.zod';

const server = new McpServer({
  name: 'freeeAPIServer',
  version: '1.0.0',
});


server.tool(
  'getUsersMe',
  'ログインユーザーの取得',
  getUsersMeHandler
);

server.tool(
  'getCompanyEmployees',
  '全期間の従業員一覧の取得',
  {
    pathParams: getCompanyEmployeesParams,
    queryParams: getCompanyEmployeesQueryParams
  },
  getCompanyEmployeesHandler
);

server.tool(
  'getEmployees',
  '従業員一覧の取得',
  {
    queryParams: getEmployeesQueryParams
  },
  getEmployeesHandler
);

server.tool(
  'createEmployee',
  '従業員の作成',
  {
    bodyParams: createEmployeeBody
  },
  createEmployeeHandler
);

server.tool(
  'getEmployee',
  '従業員の取得',
  {
    pathParams: getEmployeeParams,
    queryParams: getEmployeeQueryParams
  },
  getEmployeeHandler
);

server.tool(
  'updateEmployee',
  '従業員の更新',
  {
    pathParams: updateEmployeeParams,
    bodyParams: updateEmployeeBody
  },
  updateEmployeeHandler
);

server.tool(
  'destroyEmployee',
  '従業員の削除',
  {
    pathParams: destroyEmployeeParams,
    queryParams: destroyEmployeeQueryParams
  },
  destroyEmployeeHandler
);

server.tool(
  'getEmployeeProfileRule',
  '従業員の姓名・住所などの取得',
  {
    pathParams: getEmployeeProfileRuleParams,
    queryParams: getEmployeeProfileRuleQueryParams
  },
  getEmployeeProfileRuleHandler
);

server.tool(
  'updateEmployeeProfileRule',
  '従業員の姓名・住所などの更新',
  {
    pathParams: updateEmployeeProfileRuleParams,
    bodyParams: updateEmployeeProfileRuleBody
  },
  updateEmployeeProfileRuleHandler
);

server.tool(
  'getEmployeeHealthInsuranceRule',
  '従業員の健康保険の取得',
  {
    pathParams: getEmployeeHealthInsuranceRuleParams,
    queryParams: getEmployeeHealthInsuranceRuleQueryParams
  },
  getEmployeeHealthInsuranceRuleHandler
);

server.tool(
  'updateEmployeeHealthInsuranceRule',
  '従業員の健康保険の更新',
  {
    pathParams: updateEmployeeHealthInsuranceRuleParams,
    bodyParams: updateEmployeeHealthInsuranceRuleBody
  },
  updateEmployeeHealthInsuranceRuleHandler
);

server.tool(
  'getEmployeeWelfarePensionInsuranceRule',
  '従業員の厚生年金保険の取得',
  {
    pathParams: getEmployeeWelfarePensionInsuranceRuleParams,
    queryParams: getEmployeeWelfarePensionInsuranceRuleQueryParams
  },
  getEmployeeWelfarePensionInsuranceRuleHandler
);

server.tool(
  'updateEmployeeWelfarePensionInsuranceRule',
  '従業員の厚生年金保険の更新',
  {
    pathParams: updateEmployeeWelfarePensionInsuranceRuleParams,
    bodyParams: updateEmployeeWelfarePensionInsuranceRuleBody
  },
  updateEmployeeWelfarePensionInsuranceRuleHandler
);

server.tool(
  'getEmployeeDependentRules',
  '従業員の家族情報の取得',
  {
    pathParams: getEmployeeDependentRulesParams,
    queryParams: getEmployeeDependentRulesQueryParams
  },
  getEmployeeDependentRulesHandler
);

server.tool(
  'bulkUpdateEmployeeDependentRules',
  '従業員の家族情報の更新',
  {
    pathParams: bulkUpdateEmployeeDependentRulesParams,
    bodyParams: bulkUpdateEmployeeDependentRulesBody
  },
  bulkUpdateEmployeeDependentRulesHandler
);

server.tool(
  'getEmployeeBankAccountRule',
  '従業員の銀行口座の取得',
  {
    pathParams: getEmployeeBankAccountRuleParams,
    queryParams: getEmployeeBankAccountRuleQueryParams
  },
  getEmployeeBankAccountRuleHandler
);

server.tool(
  'updateEmployeeBankAccountRule',
  '従業員の銀行口座の更新',
  {
    pathParams: updateEmployeeBankAccountRuleParams,
    bodyParams: updateEmployeeBankAccountRuleBody
  },
  updateEmployeeBankAccountRuleHandler
);

server.tool(
  'getEmployeeBasicPayRule',
  '従業員の基本給の取得',
  {
    pathParams: getEmployeeBasicPayRuleParams,
    queryParams: getEmployeeBasicPayRuleQueryParams
  },
  getEmployeeBasicPayRuleHandler
);

server.tool(
  'updateEmployeeBasicPayRule',
  '従業員の基本給の更新',
  {
    pathParams: updateEmployeeBasicPayRuleParams,
    bodyParams: updateEmployeeBasicPayRuleBody
  },
  updateEmployeeBasicPayRuleHandler
);

server.tool(
  'getEmployeeProfileCustomFieldsRule',
  '従業員のカスタム項目の取得',
  {
    pathParams: getEmployeeProfileCustomFieldsRuleParams,
    queryParams: getEmployeeProfileCustomFieldsRuleQueryParams
  },
  getEmployeeProfileCustomFieldsRuleHandler
);

server.tool(
  'getEmployeeWorkRecord',
  '勤怠の取得',
  {
    pathParams: getEmployeeWorkRecordParams,
    queryParams: getEmployeeWorkRecordQueryParams
  },
  getEmployeeWorkRecordHandler
);

server.tool(
  'updateEmployeeWorkRecord',
  '勤怠の更新',
  {
    pathParams: updateEmployeeWorkRecordParams,
    bodyParams: updateEmployeeWorkRecordBody
  },
  updateEmployeeWorkRecordHandler
);

server.tool(
  'destroyEmployeeWorkRecord',
  '勤怠の削除',
  {
    pathParams: destroyEmployeeWorkRecordParams,
    queryParams: destroyEmployeeWorkRecordQueryParams
  },
  destroyEmployeeWorkRecordHandler
);

server.tool(
  'getEmployeeWorkRecordSummary',
  '勤怠情報月次サマリの取得',
  {
    pathParams: getEmployeeWorkRecordSummaryParams,
    queryParams: getEmployeeWorkRecordSummaryQueryParams
  },
  getEmployeeWorkRecordSummaryHandler
);

server.tool(
  'updateEmployeeWorkRecordSummary',
  '勤怠情報月次サマリの更新',
  {
    pathParams: updateEmployeeWorkRecordSummaryParams,
    bodyParams: updateEmployeeWorkRecordSummaryBody
  },
  updateEmployeeWorkRecordSummaryHandler
);

server.tool(
  'getEmployeeTimeClocks',
  '打刻一覧の取得',
  {
    pathParams: getEmployeeTimeClocksParams,
    queryParams: getEmployeeTimeClocksQueryParams
  },
  getEmployeeTimeClocksHandler
);

server.tool(
  'createEmployeeTimeClock',
  '打刻の登録',
  {
    pathParams: createEmployeeTimeClockParams,
    bodyParams: createEmployeeTimeClockBody
  },
  createEmployeeTimeClockHandler
);

server.tool(
  'getEmployeeTimeClock',
  '打刻の取得',
  {
    pathParams: getEmployeeTimeClockParams,
    queryParams: getEmployeeTimeClockQueryParams
  },
  getEmployeeTimeClockHandler
);

server.tool(
  'getEmployeeTimeClocksAvailableTypes',
  '打刻可能種別の取得',
  {
    pathParams: getEmployeeTimeClocksAvailableTypesParams,
    queryParams: getEmployeeTimeClocksAvailableTypesQueryParams
  },
  getEmployeeTimeClocksAvailableTypesHandler
);

server.tool(
  'getEmployeesSpecialHolidays',
  '従業員の特別休暇一覧の取得',
  {
    pathParams: getEmployeesSpecialHolidaysParams,
    queryParams: getEmployeesSpecialHolidaysQueryParams
  },
  getEmployeesSpecialHolidaysHandler
);

server.tool(
  'getEmployeesAttendanceTagSummaries',
  '勤怠タグ月次サマリの取得',
  {
    pathParams: getEmployeesAttendanceTagSummariesParams,
    queryParams: getEmployeesAttendanceTagSummariesQueryParams
  },
  getEmployeesAttendanceTagSummariesHandler
);

server.tool(
  'updateEmployeesAttendanceTagSummaries',
  '勤怠タグ月次サマリの更新',
  {
    pathParams: updateEmployeesAttendanceTagSummariesParams,
    bodyParams: updateEmployeesAttendanceTagSummariesBody
  },
  updateEmployeesAttendanceTagSummariesHandler
);

server.tool(
  'getEmployeesAttendanceTags',
  '勤怠タグ一覧の取得',
  {
    pathParams: getEmployeesAttendanceTagsParams,
    queryParams: getEmployeesAttendanceTagsQueryParams
  },
  getEmployeesAttendanceTagsHandler
);

server.tool(
  'getEmployeesAttendanceTagsByDate',
  '勤怠タグと利用回数の取得',
  {
    pathParams: getEmployeesAttendanceTagsByDateParams,
    queryParams: getEmployeesAttendanceTagsByDateQueryParams
  },
  getEmployeesAttendanceTagsByDateHandler
);

server.tool(
  'updateEmployeesAttendanceTags',
  '勤怠タグの更新',
  {
    pathParams: updateEmployeesAttendanceTagsParams,
    bodyParams: updateEmployeesAttendanceTagsBody
  },
  updateEmployeesAttendanceTagsHandler
);

server.tool(
  'getSalariesEmployeePayrollStatements',
  '給与明細一覧の取得',
  {
    queryParams: getSalariesEmployeePayrollStatementsQueryParams
  },
  getSalariesEmployeePayrollStatementsHandler
);

server.tool(
  'getSalariesEmployeePayrollStatement',
  '給与明細の取得',
  {
    pathParams: getSalariesEmployeePayrollStatementParams,
    queryParams: getSalariesEmployeePayrollStatementQueryParams
  },
  getSalariesEmployeePayrollStatementHandler
);

server.tool(
  'getBonusesEmployeePayrollStatements',
  '賞与明細一覧の取得',
  {
    queryParams: getBonusesEmployeePayrollStatementsQueryParams
  },
  getBonusesEmployeePayrollStatementsHandler
);

server.tool(
  'getBonusesEmployeePayrollStatement',
  '賞与明細の取得',
  {
    pathParams: getBonusesEmployeePayrollStatementParams,
    queryParams: getBonusesEmployeePayrollStatementQueryParams
  },
  getBonusesEmployeePayrollStatementHandler
);

server.tool(
  'getEmployeeGroupMemberships',
  '所属一覧の取得',
  {
    queryParams: getEmployeeGroupMembershipsQueryParams
  },
  getEmployeeGroupMembershipsHandler
);

server.tool(
  'getGroups',
  '部門一覧の取得',
  {
    queryParams: getGroupsQueryParams
  },
  getGroupsHandler
);

server.tool(
  'createGroup',
  '部門の作成',
  {
    bodyParams: createGroupBody
  },
  createGroupHandler
);

server.tool(
  'updateGroup',
  '部門の更新',
  {
    pathParams: updateGroupParams,
    bodyParams: updateGroupBody
  },
  updateGroupHandler
);

server.tool(
  'destroyGroup',
  '部門の削除',
  {
    pathParams: destroyGroupParams,
    queryParams: destroyGroupQueryParams
  },
  destroyGroupHandler
);

server.tool(
  'getPositions',
  '役職一覧の取得',
  {
    queryParams: getPositionsQueryParams
  },
  getPositionsHandler
);

server.tool(
  'createPosition',
  '役職の作成',
  {
    bodyParams: createPositionBody
  },
  createPositionHandler
);

server.tool(
  'updatePosition',
  '役職の更新',
  {
    pathParams: updatePositionParams,
    bodyParams: updatePositionBody
  },
  updatePositionHandler
);

server.tool(
  'destroyPosition',
  '役職の削除',
  {
    pathParams: destroyPositionParams,
    queryParams: destroyPositionQueryParams
  },
  destroyPositionHandler
);

server.tool(
  'getApprovalRequestsMonthlyAttendances',
  '月次勤怠締め申請一覧の取得',
  {
    queryParams: getApprovalRequestsMonthlyAttendancesQueryParams
  },
  getApprovalRequestsMonthlyAttendancesHandler
);

server.tool(
  'createApprovalRequestsMonthlyAttendance',
  '月次勤怠締め申請の作成',
  {
    bodyParams: createApprovalRequestsMonthlyAttendanceBody
  },
  createApprovalRequestsMonthlyAttendanceHandler
);

server.tool(
  'getApprovalRequestsMonthlyAttendance',
  '月次勤怠締め申請の取得',
  {
    pathParams: getApprovalRequestsMonthlyAttendanceParams,
    queryParams: getApprovalRequestsMonthlyAttendanceQueryParams
  },
  getApprovalRequestsMonthlyAttendanceHandler
);

server.tool(
  'updateApprovalRequestsMonthlyAttendance',
  '月次勤怠締め申請の更新',
  {
    pathParams: updateApprovalRequestsMonthlyAttendanceParams,
    bodyParams: updateApprovalRequestsMonthlyAttendanceBody
  },
  updateApprovalRequestsMonthlyAttendanceHandler
);

server.tool(
  'destroyApprovalRequestsMonthlyAttendance',
  '月次勤怠締め申請の削除',
  {
    pathParams: destroyApprovalRequestsMonthlyAttendanceParams,
    queryParams: destroyApprovalRequestsMonthlyAttendanceQueryParams
  },
  destroyApprovalRequestsMonthlyAttendanceHandler
);

server.tool(
  'actionApprovalRequestsMonthlyAttendance',
  '月次勤怠締め申請の承認操作',
  {
    pathParams: actionApprovalRequestsMonthlyAttendanceParams,
    bodyParams: actionApprovalRequestsMonthlyAttendanceBody
  },
  actionApprovalRequestsMonthlyAttendanceHandler
);

server.tool(
  'getApprovalRequestsWorkTimes',
  '勤務時間修正申請一覧の取得',
  {
    queryParams: getApprovalRequestsWorkTimesQueryParams
  },
  getApprovalRequestsWorkTimesHandler
);

server.tool(
  'createApprovalRequestsWorkTime',
  '勤務時間修正申請の作成',
  {
    bodyParams: createApprovalRequestsWorkTimeBody
  },
  createApprovalRequestsWorkTimeHandler
);

server.tool(
  'getApprovalRequestsWorkTime',
  '勤務時間修正申請の取得',
  {
    pathParams: getApprovalRequestsWorkTimeParams,
    queryParams: getApprovalRequestsWorkTimeQueryParams
  },
  getApprovalRequestsWorkTimeHandler
);

server.tool(
  'updateApprovalRequestsWorkTime',
  '勤務時間修正申請の更新',
  {
    pathParams: updateApprovalRequestsWorkTimeParams,
    bodyParams: updateApprovalRequestsWorkTimeBody
  },
  updateApprovalRequestsWorkTimeHandler
);

server.tool(
  'destroyApprovalRequestsWorkTime',
  '勤務時間修正申請の削除',
  {
    pathParams: destroyApprovalRequestsWorkTimeParams,
    queryParams: destroyApprovalRequestsWorkTimeQueryParams
  },
  destroyApprovalRequestsWorkTimeHandler
);

server.tool(
  'actionApprovalRequestsWorkTime',
  '勤務時間修正申請の承認操作',
  {
    pathParams: actionApprovalRequestsWorkTimeParams,
    bodyParams: actionApprovalRequestsWorkTimeBody
  },
  actionApprovalRequestsWorkTimeHandler
);

server.tool(
  'getApprovalRequestsPaidHolidays',
  '有給申請一覧の取得',
  {
    queryParams: getApprovalRequestsPaidHolidaysQueryParams
  },
  getApprovalRequestsPaidHolidaysHandler
);

server.tool(
  'createApprovalRequestsPaidHoliday',
  '有給申請の作成',
  {
    bodyParams: createApprovalRequestsPaidHolidayBody
  },
  createApprovalRequestsPaidHolidayHandler
);

server.tool(
  'getApprovalRequestsPaidHoliday',
  '有給申請の取得',
  {
    pathParams: getApprovalRequestsPaidHolidayParams,
    queryParams: getApprovalRequestsPaidHolidayQueryParams
  },
  getApprovalRequestsPaidHolidayHandler
);

server.tool(
  'updateApprovalRequestsPaidHoliday',
  '有給申請の更新',
  {
    pathParams: updateApprovalRequestsPaidHolidayParams,
    bodyParams: updateApprovalRequestsPaidHolidayBody
  },
  updateApprovalRequestsPaidHolidayHandler
);

server.tool(
  'destroyApprovalRequestsPaidHoliday',
  '有給申請の削除',
  {
    pathParams: destroyApprovalRequestsPaidHolidayParams,
    queryParams: destroyApprovalRequestsPaidHolidayQueryParams
  },
  destroyApprovalRequestsPaidHolidayHandler
);

server.tool(
  'actionApprovalRequestsPaidHoliday',
  '有給申請の承認操作',
  {
    pathParams: actionApprovalRequestsPaidHolidayParams,
    bodyParams: actionApprovalRequestsPaidHolidayBody
  },
  actionApprovalRequestsPaidHolidayHandler
);

server.tool(
  'getApprovalRequestsSpecialHolidays',
  '特別休暇申請一覧の取得',
  {
    queryParams: getApprovalRequestsSpecialHolidaysQueryParams
  },
  getApprovalRequestsSpecialHolidaysHandler
);

server.tool(
  'createApprovalRequestsSpecialHoliday',
  '特別休暇申請の作成',
  {
    bodyParams: createApprovalRequestsSpecialHolidayBody
  },
  createApprovalRequestsSpecialHolidayHandler
);

server.tool(
  'getApprovalRequestsSpecialHoliday',
  '特別休暇申請の取得',
  {
    pathParams: getApprovalRequestsSpecialHolidayParams,
    queryParams: getApprovalRequestsSpecialHolidayQueryParams
  },
  getApprovalRequestsSpecialHolidayHandler
);

server.tool(
  'updateApprovalRequestsSpecialHoliday',
  '特別休暇申請の更新',
  {
    pathParams: updateApprovalRequestsSpecialHolidayParams,
    bodyParams: updateApprovalRequestsSpecialHolidayBody
  },
  updateApprovalRequestsSpecialHolidayHandler
);

server.tool(
  'destroyApprovalRequestsSpecialHoliday',
  '特別休暇申請の削除',
  {
    pathParams: destroyApprovalRequestsSpecialHolidayParams,
    queryParams: destroyApprovalRequestsSpecialHolidayQueryParams
  },
  destroyApprovalRequestsSpecialHolidayHandler
);

server.tool(
  'actionApprovalRequestsSpecialHoliday',
  '特別休暇申請の承認操作',
  {
    pathParams: actionApprovalRequestsSpecialHolidayParams,
    bodyParams: actionApprovalRequestsSpecialHolidayBody
  },
  actionApprovalRequestsSpecialHolidayHandler
);

server.tool(
  'getApprovalRequestsOvertimeWorks',
  '残業申請一覧の取得',
  {
    queryParams: getApprovalRequestsOvertimeWorksQueryParams
  },
  getApprovalRequestsOvertimeWorksHandler
);

server.tool(
  'createApprovalRequestsOvertimeWork',
  '残業申請の作成',
  {
    bodyParams: createApprovalRequestsOvertimeWorkBody
  },
  createApprovalRequestsOvertimeWorkHandler
);

server.tool(
  'getApprovalRequestsOvertimeWork',
  '残業申請の取得',
  {
    pathParams: getApprovalRequestsOvertimeWorkParams,
    queryParams: getApprovalRequestsOvertimeWorkQueryParams
  },
  getApprovalRequestsOvertimeWorkHandler
);

server.tool(
  'updateApprovalRequestsOvertimeWork',
  '残業申請の更新',
  {
    pathParams: updateApprovalRequestsOvertimeWorkParams,
    bodyParams: updateApprovalRequestsOvertimeWorkBody
  },
  updateApprovalRequestsOvertimeWorkHandler
);

server.tool(
  'destroyApprovalRequestsOvertimeWork',
  '残業申請の削除',
  {
    pathParams: destroyApprovalRequestsOvertimeWorkParams,
    queryParams: destroyApprovalRequestsOvertimeWorkQueryParams
  },
  destroyApprovalRequestsOvertimeWorkHandler
);

server.tool(
  'actionApprovalRequestsOvertimeWork',
  '残業申請の承認操作',
  {
    pathParams: actionApprovalRequestsOvertimeWorkParams,
    bodyParams: actionApprovalRequestsOvertimeWorkBody
  },
  actionApprovalRequestsOvertimeWorkHandler
);

server.tool(
  'getApprovalRequestsOvertimeWorkSetting',
  '残業申請に必要な設定情報の取得',
  {
    queryParams: getApprovalRequestsOvertimeWorkSettingQueryParams
  },
  getApprovalRequestsOvertimeWorkSettingHandler
);

server.tool(
  'getApprovalFlowRoutes',
  '申請経路一覧の取得',
  {
    queryParams: getApprovalFlowRoutesQueryParams
  },
  getApprovalFlowRoutesHandler
);

server.tool(
  'getApprovalFlowRoute',
  '申請経路の取得',
  {
    pathParams: getApprovalFlowRouteParams,
    queryParams: getApprovalFlowRouteQueryParams
  },
  getApprovalFlowRouteHandler
);

server.tool(
  'getYearendAdjustmentEmployees',
  '年末調整対象一覧の取得',
  {
    pathParams: getYearendAdjustmentEmployeesParams,
    queryParams: getYearendAdjustmentEmployeesQueryParams
  },
  getYearendAdjustmentEmployeesHandler
);

server.tool(
  'getYearendAdjustmentEmployee',
  '年末調整の取得',
  {
    pathParams: getYearendAdjustmentEmployeeParams,
    queryParams: getYearendAdjustmentEmployeeQueryParams
  },
  getYearendAdjustmentEmployeeHandler
);

server.tool(
  'putYearendAdjustmentEmployee',
  '年末調整従業員情報の更新',
  {
    pathParams: putYearendAdjustmentEmployeeParams,
    bodyParams: putYearendAdjustmentEmployeeBody
  },
  putYearendAdjustmentEmployeeHandler
);

server.tool(
  'putYearendAdjustmentPayrollAndBonus',
  '年末調整従業員給与・賞与の更新',
  {
    pathParams: putYearendAdjustmentPayrollAndBonusParams,
    bodyParams: putYearendAdjustmentPayrollAndBonusBody
  },
  putYearendAdjustmentPayrollAndBonusHandler
);

server.tool(
  'putYearendAdjustmentDependents',
  '年末調整家族情報の更新',
  {
    pathParams: putYearendAdjustmentDependentsParams,
    bodyParams: putYearendAdjustmentDependentsBody
  },
  putYearendAdjustmentDependentsHandler
);

server.tool(
  'putYearendAdjustmentPreviousJob',
  '年末調整従業員前職情報の更新',
  {
    pathParams: putYearendAdjustmentPreviousJobParams,
    bodyParams: putYearendAdjustmentPreviousJobBody
  },
  putYearendAdjustmentPreviousJobHandler
);

server.tool(
  'destroyYearendAdjustmentPreviousJob',
  '年末調整従業員前職情報の削除',
  {
    pathParams: destroyYearendAdjustmentPreviousJobParams,
    queryParams: destroyYearendAdjustmentPreviousJobQueryParams
  },
  destroyYearendAdjustmentPreviousJobHandler
);

server.tool(
  'postYearendAdjustmentInsurances',
  '年末調整従業員保険料情報の作成',
  {
    pathParams: postYearendAdjustmentInsurancesParams,
    bodyParams: postYearendAdjustmentInsurancesBody
  },
  postYearendAdjustmentInsurancesHandler
);

server.tool(
  'putYearendAdjustmentInsurances',
  '年末調整従業員保険料情報の更新',
  {
    pathParams: putYearendAdjustmentInsurancesParams,
    bodyParams: putYearendAdjustmentInsurancesBody
  },
  putYearendAdjustmentInsurancesHandler
);

server.tool(
  'destroyYearendAdjustmentInsurances',
  '年末調整従業員保険料情報の削除',
  {
    pathParams: destroyYearendAdjustmentInsurancesParams,
    queryParams: destroyYearendAdjustmentInsurancesQueryParams
  },
  destroyYearendAdjustmentInsurancesHandler
);

server.tool(
  'putYearendAdjustmentHousingLoanDeduction',
  '年末調整従業員住宅ローン控除額の更新',
  {
    pathParams: putYearendAdjustmentHousingLoanDeductionParams,
    bodyParams: putYearendAdjustmentHousingLoanDeductionBody
  },
  putYearendAdjustmentHousingLoanDeductionHandler
);

server.tool(
  'postYearendAdjustmentHousingLoan',
  '年末調整従業員住宅ローンの作成',
  {
    pathParams: postYearendAdjustmentHousingLoanParams,
    bodyParams: postYearendAdjustmentHousingLoanBody
  },
  postYearendAdjustmentHousingLoanHandler
);

server.tool(
  'putYearendAdjustmentHousingLoan',
  '年末調整従業員住宅ローンの更新',
  {
    pathParams: putYearendAdjustmentHousingLoanParams,
    bodyParams: putYearendAdjustmentHousingLoanBody
  },
  putYearendAdjustmentHousingLoanHandler
);

server.tool(
  'destroyYearendAdjustmentHousingLoan',
  '年末調整従業員住宅ローンの削除',
  {
    pathParams: destroyYearendAdjustmentHousingLoanParams,
    queryParams: destroyYearendAdjustmentHousingLoanQueryParams
  },
  destroyYearendAdjustmentHousingLoanHandler
);

const transport = new StdioServerTransport();

server.connect(transport).then(() => {
  console.error('MCP server running on stdio');
  console.error('Request logging is enabled for all API calls');
}).catch(console.error);
